{"version":3,"sources":["components/function.js","components/settings/default_settings.js","components/settings/setting.js","components/settings/settings.js","components/color.js","App.js","reportWebVitals.js","index.js"],"names":["color_blue","color_grey","scope","Math","log","InputFunction","props","useState","math_expr","setMathExpr","setColor","color","generator","randomBrightColor","functionColor","field","setField","reload","setReload","math_input","useRef","error","setError","useEffect","current","q","MathLive","makeMathField","virtualKeyboardMode","virtualKeyboardLayout","onFocus","random","onContentDidChange","mf","getValue","replaceAll","setSelected","index","length","setFunctions","prev","x","NaN","expr","trim","includes","func","evaluate","PI","prev_","slice","err2","message","err","focus","onBlur","onClick","style","width","height","border","selected","justifyContent","display","position","backgroundColor","float","className","fontSize","left","top","transform","Tooltip","title","xmlns","fill","viewBox","d","ref","marginLeft","DEFAULT_SETTINGS","axis","grid","outer_grid","function","deepClone2D","obj","new_obj","property","cur_obj","sub_property","settings_prototype","default","createDefaultSettings","settings_copy","value","forEach","setting","ColorSelect","useColor","open","setOpen","Button","e","unAppliedSettings","name","right","visibility","marginRight","marginTop","zIndex","cursor","handle","Popover","onKeyDown","code","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","background","toColor","onChange","setNewSettings","clone","hex","hideHSV","dark","RangeSetting","Slider","valueLabelFormat","aria-labelledby","valueLabelDisplay","min","range","max","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","SelectSetting","classes","FormControl","InputLabel","id","setting_name","Select","labelId","target","handleChange","values","map","i","MenuItem","string","charAt","toUpperCase","TabPanel","children","other","role","hidden","Box","p","Typography","Settings","setCurrentSettings","marginBottom","Fab","size","aria-label","Dialog","aria-describedby","DialogTitle","DialogContent","AppBar","Tabs","variant","settings","item","Tab","label","a11yProps","gutterBottom","description","type","setUnApliedSettings","options","Divider","DialogActions","autoFocus","getRandomInt","ceil","floor","RandomColorGenerator","this","pallete","$","h","s","v","r","g","b","f","t","arguments","round","HSVtoRGB","App","setSize","functions","setLength","layerWidth","setLayerWidth","currentSettings","window","innerWidth","innerHeight","handleResize","useCallback","addEventListener","removeEventListener","overflow","onResize","dir","elm","getBoundingClientRect","maxWidth","maxHeight","minHeight","defaultSize","padding","randomColorFromPallete","canvasStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","process","toLowerCase","console","warn","info","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65ca0a39.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport { addStyles, EditableMathField } from 'react-mathquill'\nimport MathLive from 'mathlive';\nimport {evaluate} from 'mathjs';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst color_blue = \"#2c5a84\";\nconst color_grey = \"rgb(33 33 33)\";\n\n\n\nlet scope = {'ln': Math.log}\n\n\n\nconst InputFunction = (props) => {\n    const [math_expr, setMathExpr] = useState(\"\");\n    const [color, setColor] = useState(color_grey);\n    const [functionColor, setFunctionColor] = useState(  \n        typeof props.color === \"string\" ? props.color : props.generator.randomBrightColor()\n     );\n    const [field, setField] = useState(null);\n    const [reload, setReload] = useState(null);\n\n    const math_input = useRef();\n\n    const [error, setError] = useState(false);\n\n\n\n    const handleNewFunction = () => {\n        if (props.index + 1 !== props.length)\n            return;\n        props.setFunctions(prev => [...prev, [ x => NaN, \"red\" ] ]);\n    }\n\n    useEffect(() => {\n        if (!math_input.current)\n            return;\n\n       let q=  MathLive.makeMathField(math_input.current,  {\n            virtualKeyboardMode: \"manual\",\n            virtualKeyboardLayout: 'dvorak',\n            onFocus: () => {\n                setColor(color_blue);\n                setReload(Math.random());\n            },\n            onContentDidChange: (mf) => {\n                setMathExpr( mf.getValue('ascii-math')\n                .replaceAll(\"⋅\", \"*\")\n            )\n            }\n        });\n\n        setField(q);\n\n    }, [math_input])\n\n    useEffect(() => {\n        if (!reload)\n            return;\n\n        props.setSelected(props.index);\n        handleNewFunction();\n    }, [reload]);\n\n    useEffect(() => {\n        try {\n            let expr = math_expr.trim();\n            if (expr.length == 0)\n                return;\n\n            if (!expr.includes(\"=\") )\n                expr = `f(x)=${expr}`;\n\n            // console.log(\"got to thos state\", math_expr)\n            let func = evaluate( expr, scope  );\n            if (typeof func != \"function\")\n                return;\n            try { \n                let ____;\n                ____ = func(-3.1415);\n                ____ = func(Math.PI);\n                props.setFunctions(prev => {\n                    let prev_ = prev.slice();\n                    // console.log(\"set\");\n                    prev_[props.index] = [func, functionColor];\n                    return prev_;\n                })\n\n            } catch(err2) {\n                setError(err2.message);\n                // console.log(\"err2\", err2.message)\n                return\n            }\n        } catch(err) {\n            setError(err.message);\n            // console.log(\"err1\", err.message)\n            return\n        \n        }\n        setError(null);\n    }, [math_expr])\n\n\n    return (\n        <div \n\n        onFocus={() => {\n            field.focus();\n            setColor(color_blue);\n        }}\n\n        onBlur={ () => {\n            props.setSelected(null);\n            // setColor(color_grey);   \n        }}\n        \n        onClick={() => {\n            field.focus();\n            props.setSelected(props.index);\n            // setColor(color_blue);\n        }}\n        \n        style={{\n            width: \"100%\",\n            height: \"58px\",\n            border: `1px solid ${props.selected === props.index ? color_blue : color_grey}`,\n            justifyContent: \"space-around\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        }}>\n            \n\n            <div style={{\n                position : \"relative\",\n                width: \"38px\",\n                height: \"100%\",\n                backgroundColor: `${props.selected === props.index ? color_blue : color_grey}`,\n                float: 'left',\n                border: `1px solid ${props.selected !== props.index ? \"#252727\" : color_blue}`\n            }}> \n\n            <label className=\"blured\" style={{\"position\": \"absolute\", fontSize: \"10px\", left: 0, top: 0}}>{props.index + 1}</label>\n\n\n\n            \n\n                <div style={{\n                    \"position\" : \"absolute\",\n                    \"left\" : \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    \"top\" : \"50%\",\n\n                }}>\n                    {\n                        error ? \n                    <Tooltip title={error}>\n                        <WarningIcon style={{\"color\": \"#d88181\"}} />\n                    </Tooltip> :\n\n                        <svg style={{\n                            \"color\" : functionColor,\n                            \n                        }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" className=\"bi bi-lightning-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M5.52.359A.5.5 0 0 1 6 0h4a.5.5 0 0 1 .474.658L8.694 6H12.5a.5.5 0 0 1 .395.807l-7 9a.5.5 0 0 1-.873-.454L6.823 9.5H3.5a.5.5 0 0 1-.48-.641l2.5-8.5z\"/>\n                        </svg>\n                    }\n\n\n                </div>\n\n\n            </div>\n\n\n            <div style={{\n                \"color\": \"white\",\n                float: 'left',\n                width: \"calc( 100% - 38px )\",\n            }}>\n\n                <div ref={math_input} \n                    style={{\n                        position: \"relative\",\n                        marginLeft: \"10px\",\n                        fontSize: \"120%\",\n                        width: \"calc(100% - 10px)\"\n                    }}\n                ></div>            \n\n            </div>\n        \n\n        </div>\n    )\n}\n\nexport default InputFunction;\n","var DEFAULT_SETTINGS = {\n    axis: {\n        \"lineWidth\": 2,\n        \"strokeStyle\": \"#878a91\",\n        \"shadowBlur\": 0    \n    },\n    grid: {\n        \"lineWidth\": 2,\n        \"strokeStyle\": \"#878a91\",\n        \"shadowBlur\": 0    \n    },\n    outer_grid: {\n        \"lineWidth\": 1,\n        \"strokeStyle\": \"#333435\"    \n    },\n\n    function: {\n        \"lineWidth\": 4,    \n    }\n}\n\n\nexport function deepClone2D(obj)\n{\n  let new_obj = {};\n  for (let property in obj)\n  {\n\t\tlet cur_obj = {};\n    for (let sub_property in obj[property] )\n    {\n       cur_obj[sub_property] = obj[property][sub_property];\n    }\n    new_obj[property] = cur_obj;\n  }\n  return new_obj;\n};\n\n\nexport const settings_prototype = [\n    {\"name\": \"Line Width\"\t\t\t, property: \"lineWidth\", default: 1, \"description\": \"Width of lines\"\t\t, \"type\": \"range\", \"range\": [1, 4]\t\t\t\t\t},\n    {\"name\": \"Shadow Blur\"\t\t, property: \"shadowBlur\", default: 0, \"description\": \"Specifies the blurring effect.\"\t\t, \"type\": \"range\", \"range\": [0, 50] \t\t\t\t\t\t},\n    {\"name\": \"Line Color\"\t\t\t, property: \"strokeStyle\", default: \"#fff\", \"description\": \"Color or style to use for the lines around shapes\"\t\t, \"type\": \"color\" \t\t\t\t\t},\n    {\"name\": \"Shadow Color\"\t\t, property: \"shadowColor\", default: \"transparent\", \"description\": \"Color of the shadow. Default: fully-transparent black\"\t\t, \"type\": \"color\" \t\t\t\t\t\t},\n    {\"name\": \"Shadow offset X\", property: \"shadowOffsetX\", default: 0, \"description\": \"Horizontal distance the shadow will be offset\"\t\t, \"type\": \"range\", \"range\": [0, 50] \t\t\t\t\t\t\t\t},\n    {\"name\": \"Shadow offset Y\", property: \"shadowOffsetY\", default: 0, \"description\": \"Vertical distance the shadow will be offset\"\t\t, \"type\": \"range\", \"range\": [0, 50] \t\t\t\t\t\t\t\t},\n    {\"name\": \"Line Cap\"\t\t\t\t, property: \"lineCap\", default: \"round\", \"description\": \"Type of endings on the end of lines. Possible values: butt (default), round, square\"\t\t, \"type\": \"select\", \"options\": [\"butt\", \"round\", \"square\"] \t\t\t\t},\n    {\"name\": \"Line Join\"\t\t\t, property: \"lineJoin\", default: \"round\", \"description\": \"Defines the type of corners where two lines meet. Possible values: round, bevel, miter (default)\"\t\t, \"type\": \"select\", \"options\": [\"round\", \"bevel\", \"miter\"] \t\t\t\t\t},\n]\n\n\nexport function createDefaultSettings(settings_prototype)\n{\n    let settings_copy = deepClone2D(DEFAULT_SETTINGS);\n    for (let value in settings_copy)\n    {\n        settings_prototype.forEach(setting => {\n            if (!settings_copy[value][setting.property])\n            {\n                settings_copy[value][setting.property] = setting.default;\n            }\n        })\n    }\n    // console.log(settings_copy)\n    return settings_copy;\n};","import React, { useEffect, useState } from \"react\";\nimport { SliderPicker, HuePicker, SketchPicker } from 'react-color'\nimport Slider from '@material-ui/core/Slider';\nimport Select from '@material-ui/core/Select';\n\nimport Typography from '@material-ui/core/Typography';\nimport Popover from '@material-ui/core/Popover'\n\n\nimport { ColorPicker, toColor, useColor } from \"react-color-palette\";\nimport \"react-color-palette/lib/css/styles.css\"\n;\nimport { Button } from \"@material-ui/core\";\n\nimport Draggable from 'react-draggable'; // The default\n\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deepClone2D } from \"./default_settings\";\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  \n\nexport const ColorSelect = (props) => {\n    const [color, setColor] = useColor(\"hex\", \"#121212\");\n    const [open, setOpen] = useState(false);\n\n    return (\n    <div>\n        <Button onClick={e => setOpen(true)} style={{\"background\": \"#3f51b5\"}}>\n            <Button    \n            onClick={e => {\n                setOpen(true)\n            } } \n            \n            style={{\n                \"background\": props.unAppliedSettings[props.name][props.property],\n                }}>\n\n            </Button>\n\n        </Button>\n\n        <Button onClick={() => {\n            setOpen(false);\n        }}   style={{\n            \"position\": \"fixed\",\n            right: 0,\n            top: 0,\n            visibility: open ? \"visible\": \"hidden\",\n            marginRight: \"20px\",\n            marginTop: \"20px\",\n            zIndex: 0,\n            cursor: \"pointer\"\n            }}>\n                <CloseIcon style={{\n                    \"color\": \"#bbafaf\"\n                }} />\n        </Button>\n\n\n        <Draggable handle=\".handle\">\n            <Popover onKeyDown={e => {\n                if (e.code === \"Escape\")\n                {\n                    setOpen(false);\n                }\n            }}\n                open={open}\n                \n                anchorReference=\"anchorPosition\"\n                anchorPosition={{ top: 200, left: 400 }}\n                anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n                }}\n                transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}              \n>\n                <div >\n\n                    <div style={{position: \"relative\", border: \"10px solid #1d1d1d\", background: \"#1d1d1d\"}}>\n                    <ColorPicker width={props.width} height={props.height} \n                    \n                    color={ toColor(\"hex\", props.unAppliedSettings[props.name][props.property]) } \n                        \n                        onChange={ value => {\n                            props.setNewSettings(prev => {\n                                let clone = deepClone2D(prev);\n                                clone[props.name][props.property] = value.hex;\n                                return clone;\n                            })                    \n                        }}\n                        \n                        hideHSV dark />\n                    </div>\n                    <div \n                    \n                    \n\n                    style={{\n                        \"textAlign\": \"center\",\n                        \"color\": \"antiquewhite\",\n                        cursor: \"move\"\n                    \n                        }} className={\"handle\"}>\n                        <OpenWithIcon />\n                    </div>\n\n                </div>\n            </Popover>\n        </Draggable>\n    </div>\n    )\n};\n\n\nexport const RangeSetting = (props) =>\n{\n    const [value, setValue] = useState();\n\n    return (\n        <div>\n            <Slider \n            valueLabelFormat={value}\n            aria-labelledby=\"discrete-slider-restrict\"\n            valueLabelDisplay=\"auto\"\n\n            value={props.unAppliedSettings[props.name][props.property]}\n\n            min={props.range[0]}\n            max={props.range[1]}\n\n            onChange={ (e, value) => {\n                props.setNewSettings(prev => {\n                    let clone = deepClone2D(prev);\n                    \n        \n                    clone[props.name][props.property] = value;\n                    return clone;\n                })        \n            }}\n\n            />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n  \n\n\nexport const SelectSetting = (props) => \n{\n    const classes = useStyles();\n\n    const handleChange = e => {\n        props.setNewSettings(prev => {\n            let clone = deepClone2D(prev);\n            clone[props.name][props.property] = e.target.value;\n            return clone;\n        })\n    }\n\n    return (\n        <FormControl style={{\"background\": \"#181a1b\"}}  className={classes.formControl}>\n        <InputLabel style={{\n            \"color\": \"rgb(63, 81, 181)\"\n        }} id=\"demo-simple-select-label\">{props.setting_name}</InputLabel>\n            <Select\n\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={props.unAppliedSettings[props.name][props.property]}\n            onChange={e => handleChange(e)}\n            >\n\n            {props.values.map(i => \n                <MenuItem style={{\n                    \"background\": \"#181a1b\",\n                    color: \"#3d4eae\"\n                }} value={i}>{capitalizeFirstLetter(i)}</MenuItem>\n            )}\n\n            </Select>\n      </FormControl>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport Fab from '@material-ui/core/Fab'\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport {createDefaultSettings, settings_prototype} from './default_settings';\n\n\n\n\nimport {RangeSetting, SelectSetting, ColorSelect} from './setting'\n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n\n  \n\n\n\nconst Settings = (props) => {\n\n    const [open, setOpen] = useState(false);\n    const [selected, setSelected] = useState(0);\n\n\n    useEffect(() => {\n        if (!open)\n            return;\n        \n        props.setCurrentSettings(props.unAppliedSettings);\n    }, [open])\n\n    useEffect(() => {\n        props.setCurrentSettings(props.unAppliedSettings);\n    }, [props.unAppliedSettings])\n\n    \n    return(\n        <div style={{\"position\": \"absolute\", \"right\": 0, \"bottom\": 0, marginRight:\"10px\", marginBottom: \"10px\"}}>\n\n            <Fab\n            onClick={() => {\n                setOpen(true);\n            }}\n\n            className={\"shadow\"}  style={{\n                \"background\": \"#2a2d2f\",\n                \n            }} size={\"medium\"}  color=\"contained\" aria-label=\"Settings\">\n                <SettingsIcon style={{\n                    color: \"rgb(255, 255, 255)\"\n                }} />\n            </Fab>\n\n      <Dialog \n\n        open={open}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n\n        style={{\"border\": 0}}\n      >\n        <DialogTitle style={{\"color\": \"rgb(177, 176, 175)\"}} className=\"black\" id=\"alert-dialog-title\">{\"Canvas Settings\"}</DialogTitle>\n        <DialogContent  className=\"black\" >\n\n            <AppBar position=\"static\">\n                <Tabs style={{\n                    background: \"#181a1b\"\n                }} value={selected} variant=\"scrollable\"  aria-label=\"simple tabs example\">\n                    {props.settings.map( (item, index) => \n                        <Tab \n                        onClick={e => setSelected(index)}\n                        style={{\n                            \"background\": \"rgb(24, 26, 27)\"\n                        }} label={item.name} {...a11yProps(index)} />    \n                    )}    \n                </Tabs>\n            </AppBar>\n            {\n                props.settings.map( (item, index) =>\n                    <TabPanel value={selected}  index={index}>\n                        {props.settings_prototype.map(setting => {                            \n                            return (\n                            <div style={{\"marginTop\": \"10px\"}}>\n                                <Typography variant=\"h5\" gutterBottom>\n                                    <div className={\"heading\"} style={{\"color\": \"white\"}}>\n                                        {setting.name}\n                                    </div>\n                                </Typography>\n                                <div style={{\"display\": \"flex\", marginBottom: \"30px\", position: \"relative\"}}>\n                                    <div className={\"muted\"}  style={{\"width\": \"50%\"}}>\n                                        <div style={{\"width\": \"90%\"}}>\n                                            {setting.description}\n                                        </div>\n                                    </div>\n\n                                    <div style={{\"width\": \"50%\"}}>\n                                    { (() => {\n                                        switch(setting.type)\n                                        {\n                                            case \"range\":\n                                                return (\n                                                <div style={{}}>\n                                                    <RangeSetting name={item.property}  unAppliedSettings={props.unAppliedSettings} setNewSettings={props.setUnApliedSettings} property={setting.property} range={setting.range} />\n                                                </div>\n                                                );\n                                            case \"select\":\n                                                return (\n                                                    <div style={{'float': \"right\"}}>\n                                                        <SelectSetting setting_name={setting.name} name={item.property} unAppliedSettings={props.unAppliedSettings} setNewSettings={props.setUnApliedSettings} property={setting.property} values={setting.options} />\n                                                    </div>\n                                                );\n                                            case \"color\":\n                                                return (\n                                                    <div style={{\"float\": \"right\"}}>\n                                                        <ColorSelect name={item.property} unAppliedSettings={props.unAppliedSettings} setNewSettings={props.setUnApliedSettings} property={setting.property} width={200} height={100} />\n                                                    </div>\n                                                );\n                                        }\n                                    })() }\n                                    </div>\n                                </div>\n                                <Divider  variant=\"inset\" />\n                            </div>)\n                        })}\n                    </TabPanel>        \n                )\n            }\n\n\n\n        </DialogContent>\n        <DialogActions className=\"black\">\n\n        <Button onClick={() => setOpen(false)} variant=\"contained\" color=\"secondary\">\n            CANCEL\n        </Button>\n\n\n          <Button onClick={() => {\n              props.setUnApliedSettings( createDefaultSettings(settings_prototype)  );\n              \n          }} variant=\"contained\" color=\"primary\" autoFocus>\n            Revert back to defaults\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n        </div>\n    )\n}\n\nexport default Settings;\n","/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\n function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nfunction HSVtoRGB(h, s, v) {\n    var r, g, b, i, f, p, q, t;\n    if (arguments.length === 1) {\n        s = h.s;\n        v = h.v; \n        h = h.h;\n    }\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n        case 0: r = v; g = t; b = p; break;\n        case 1: r = q; g = v; b = p; break;\n        case 2: r = p; g = v; b = t; break;\n        case 3: r = p; g = q; b = v; break;\n        case 4: r = t; g = p; b = v; break;\n        case 5: r = v; g = p; b = q; break;\n    }\n    return {\n        r: Math.round(r * 255),\n        g: Math.round(g * 255),\n        b: Math.round(b * 255)\n    };\n}\n\n\n\nexport class RandomColorGenerator {\n    constructor()\n    {\n        this.pallete = [\n            \"\",\n            \"#dd7776\",\n            \"#5c95cb\",\n            \"#4b9057\",\n            \"#ac94de\",\n            \"#dddddd\",\n            \"#bcbcbd\",\n            \"#5181ae\",\n            \"#9a302d\",\n        ]\n\n        this.index = 1\n    }\n\n    randomColorFromPallete()\n    {\n        if (this.index < this.pallete.length)\n        {\n            this.index++;\n            return this.pallete[this.index - 1];\n        }\n        return 0;\n    }\n\n    randomBrightColor() {\n        let $ = HSVtoRGB(getRandomInt(0, 360) / 360, getRandomInt(50, 90) / 100, getRandomInt(50, 100) / 100 );\n        return `rgb(${$.r}, ${$.g}, ${$.b})`\n    }\n\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport {Graph2D} from 'graph2d.js'\n\nimport InputFunction from './components/function'\nimport { Resizable } from \"re-resizable\";\n\nimport Settings from './components/settings/settings'\nimport \"./App.css\"\n\nimport {createDefaultSettings, settings_prototype} from './components/settings/default_settings';\n\n\nimport AddIcon from '@material-ui/icons/Add';\nimport { Button } from '@material-ui/core';\n\nimport { RandomColorGenerator  } from './components/color'\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { pow } from 'mathjs';\n\nlet settings = [\n  {\"name\" : \"Functions\"   , \"property\": \"function\"       },\n  {\"name\" : \"Axes\"        , \"property\": \"axis\"       },\n  {\"name\":  \"Grid\"        , \"property\": \"grid\"     },\n  {\"name\" : \"Smaller Grid\", \"property\": \"outer_grid\"             }\n]\n\n\n// const default_settings = createDefaultSettings(settings_prototype)\n\n\nfunction App() {\n  const [size, setSize] = useState([400, 400]);\n  const [functions, setFunctions] = useState([ [x => NaN, \"red\"]  ]);\n  const [selected, setSelected] = useState(null);\n  const [length, setLength] = useState(0);\n\n  const generator = new RandomColorGenerator();\n\n  const [layerWidth, setLayerWidth] = useState(0);\n\n  const [currentSettings, setCurrentSettings] = useState( createDefaultSettings(settings_prototype) );\n\n  const [unAppliedSettings, setUnApliedSettings] = useState(  createDefaultSettings(settings_prototype)   )\n\n\n  \n  useEffect(() => {\n    const width  = window.innerWidth;\n    const height = window.innerHeight;\n    setSize([width - layerWidth, height]);\n  }, [])\n\n\n  const handleResize = useCallback(() => {\n    const width  = window.innerWidth;\n    const height = window.innerHeight;\n    setSize([width - layerWidth, height]);\n  })\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [handleResize])\n\n\n  useEffect(() => {\n    setLength(functions.length);\n  }, [functions])\n\n  const maxWidth = 400;\n\n  return (\n  <div className=\"App\" style={{\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden !important\"\n  }} >\n      \n    <Resizable\n\n    onResize={ (e, dir, elm) => {\n      let width = elm.getBoundingClientRect().width;\n      setLayerWidth(width);\n      setSize([window.innerWidth - width, window.innerHeight]);\n    }}\n\n    maxWidth={`${maxWidth}px`}\n    minWidth={'200px'}\n\n    maxHeight={'100vh'}\n    minHeight={'100vh'}\n\n    defaultSize={{width: 350, height:'100vh'}}\n\n    \n    style={{float : 'left', width: \"20%\", height: \"100vh\"}}>\n      <div className=\"parent\" style={{\n        width: \"100%\", \n        height: \"100%\",\n        background: \"#181a1b\",\n        padding: \"0 !important\",\n        margin:  \"0 !important\",\n        border: \"1px solid rgba(33, 32, 31, 0.1)\",\n        }}>\n\n        <div style={{\n          position: \"relative\",\n          \"width\": \"100%\",\n          \"height\": \"48px\",\n          \"background\" : \"#202224\",\n          border: \"1px solid rgba(33, 32, 31, 0.1)\",\n          // \"borderRight\": \"none\"\n        }}>\n\n          <Button onClick={() => {\n            setFunctions(prev => [...prev, [ x => NaN, \"red\" ] ])\n          }} \n           style={{\"position\" : \"absolute\", left: 0, color: \"#40648d\", marginTop: \"5px\"}}>\n            <AddIcon />\n          </Button>\n\n        </div>\n\n        <div style={{width: \"100%\", height: \"calc(100% - 48px)\", overflow: \"auto\"}}\n        >\n          {functions.map( \n            (func, index) => <InputFunction generator={generator} color={generator.randomColorFromPallete()} key={index} selected={selected} setSelected={setSelected} length={length} functions={functions} setFunctions={setFunctions} index={index} />\n          )}\n        </div>\n\n        \n      </div>    \n    </Resizable>\n\n    <div style={{float: 'none', overflow: \"hidden\", background: \"red\" }}>\n      <Graph2D \n      canvasStyle={currentSettings} \n      functions={functions} \n      width={size[0]} height={size[1]} />\n\n    </div>\n\n    <Settings \n    \n    setCurrentSettings={setCurrentSettings}\n    currentSettings={currentSettings}\n\n    unAppliedSettings={unAppliedSettings} setUnApliedSettings={setUnApliedSettings} settings={settings} settings_prototype={settings_prototype} />\n\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nif (process.env.NODE_ENV.toLowerCase() !== \"development\")\n{\n  console.log   = function() {};\n  console.warn  = function() {};\n  console.error = function() {};\n  console.info  = function() {}  \n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}